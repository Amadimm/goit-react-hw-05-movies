{"version":3,"file":"static/js/247.c5a78dee.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","services/API.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/API';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const asyncFunc = async () => {\n      try {\n        setCast(await getCast(id));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    asyncFunc();\n  }, [id]);\n\n  return (\n    <ul>\n      {cast.length === 0 ? (\n        <li style={{ listStyle: 'none' }}>\n          We dont have cast information for this movie\n        </li>\n      ) : (\n        cast.map(el => (\n          <li key={el.id}>\n            <img\n              src={\n                el.profile_path\n                  ? `https://image.tmdb.org/t/p/w500${el.profile_path}`\n                  : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg?20200913095930'\n              }\n              width={200}\n              alt={el.name}\n            />\n            <p>{el.name}</p>\n            <p>Character: {el.character}</p>\n          </li>\n        ))\n      )}\n    </ul>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\nexport const API_KEY = 'ca8a22a8f3e07bb90030bd3f44166e48';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const movieById = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return movieById.data;\n};\n\nexport const getCast = async movieId => {\n  const cast = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return cast.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const reviews = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return reviews.data.results;\n};\n\nexport const searchMovies = async query => {\n  const search = await axios.get('https://api.themoviedb.org/3/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n\n  return search.data.results;\n};"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","id","useParams","useEffect","asyncFunc","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","getCast","t1","sent","t2","console","log","stop","apply","arguments","_jsx","children","length","style","listStyle","map","el","_jsxs","src","profile_path","concat","width","alt","name","character","API_KEY","fetchMovies","response","axios","get","params","api_key","abrupt","data","results","getMovieDetails","_ref2","_callee2","movieById","_context2","_x","_ref3","_callee3","movieId","_context3","_x2","getReviews","_ref4","_callee4","reviews","_context4","_x3","searchMovies","_ref5","_callee5","query","search","_context5","_x4"],"sourceRoot":""}