{"version":3,"file":"static/js/932.a979d16c.chunk.js","mappings":"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","sources":["components/ShowMoviesList/ShowMoviesList.jsx","components/SearchInput/SearchInput.styled.js","components/SearchInput/SearchInput.jsx","pages/Movies/Movies.jsx","services/API.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const ShowMoviesList = ({ movies, navigate }) => {\n  const setLocation = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`${navigate}${movie.id}`} state={{ from: setLocation }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nShowMoviesList.propTypes = {\n  movies: PropTypes.array,\n  navigate: PropTypes.string,\n};","import { styled } from 'styled-components';\n\nexport const Wrapper = styled.form`\n  margin: 20px;\n`;\n\nexport const Input = styled.input`\n  margin-right: 5px;\n`;","import { Wrapper, Input } from './SearchInput.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchInput = ({ onSubmit }) => {\n  return (\n    <Wrapper onSubmit={onSubmit}>\n      <Input type=\"text\" name=\"query\" required />\n      <button type=\"submit\">Search</button>\n    </Wrapper>\n  );\n};\n\nSearchInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import { SearchInput } from 'components/SearchInput/SearchInput';\nimport { ShowMoviesList } from 'components/ShowMoviesList/ShowMoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/API';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesList, setMoviesList] = useState([]);\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const asyncFunc = async () => {\n      try {\n        setMoviesList(await searchMovies(query));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    asyncFunc();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <SearchInput onSubmit={handleSubmit} />\n      <ShowMoviesList movies={moviesList} navigate={''} />\n    </>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nexport const API_KEY = 'ca8a22a8f3e07bb90030bd3f44166e48';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const movieById = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return movieById.data;\n};\n\nexport const getCast = async movieId => {\n  const cast = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return cast.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const reviews = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return reviews.data.results;\n};\n\nexport const searchMovies = async query => {\n  const search = await axios.get('https://api.themoviedb.org/3/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n\n  return search.data.results;\n};"],"names":["ShowMoviesList","_ref","movies","navigate","setLocation","useLocation","_jsx","children","map","movie","Link","to","concat","id","state","from","title","Wrapper","styled","form","_templateObject","_taggedTemplateLiteral","Input","input","_templateObject2","SearchInput","onSubmit","_jsxs","type","name","required","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","moviesList","setMoviesList","query","get","useEffect","asyncFunc","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","searchMovies","t1","sent","t2","console","log","stop","apply","arguments","_Fragment","e","preventDefault","currentTarget","elements","value","reset","API_KEY","fetchMovies","response","axios","params","api_key","abrupt","data","results","getMovieDetails","_ref2","_callee2","movieById","_context2","_x","getCast","_ref3","_callee3","movieId","cast","_context3","_x2","getReviews","_ref4","_callee4","reviews","_context4","_x3","_ref5","_callee5","search","_context5","_x4"],"sourceRoot":""}