{"version":3,"file":"static/js/33.ad43d28f.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const MovieInfo = styled.div`\n  margin-right: 30px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n`;","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/API';\nimport { Suspense, useEffect, useState } from 'react';\nimport { MovieInfo, Wrapper, Button } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n  const { id } = useParams();\n\n  const link = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const asyncFunc = async () => {\n      try {\n        const movieDetails = await getMovieDetails(id);\n        setMovieDetails(movieDetails);\n        setGenres(movieDetails.genres);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    asyncFunc();\n  }, [id]);\n\n  return (\n    <>\n      <Link to={link}>\n        <Button>‚Üê Go back</Button>\n      </Link>\n      <Wrapper>\n        <MovieInfo>\n          <img\n            src={\n              movieDetails.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg?20200913095930'\n            }\n            alt={movieDetails.title}\n            width={250}\n          />\n        </MovieInfo>\n        <div>\n          <h2>{movieDetails.title}</h2>\n          <p>User score: {movieDetails.vote_average * 10} %</p>\n          <h3>Overview</h3>\n          <p>{movieDetails.overview}</p>\n          <h4>Genres</h4>\n          <div style={{ display: 'flex', gap: '10px' }}>\n            {genres.map(genre => (\n              <p key={genre.id}>{genre.name}</p>\n            ))}\n          </div>\n        </div>\n      </Wrapper>\n      <hr />\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: link }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: link }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <hr />\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nexport const API_KEY = 'ca8a22a8f3e07bb90030bd3f44166e48';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const movieById = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return movieById.data;\n};\n\nexport const getCast = async movieId => {\n  const cast = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return cast.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const reviews = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return reviews.data.results;\n};\n\nexport const searchMovies = async query => {\n  const search = await axios.get('https://api.themoviedb.org/3/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n\n  return search.data.results;\n};"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","MovieInfo","_templateObject2","Button","button","_templateObject3","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","genres","setGenres","location","useLocation","id","useParams","link","state","from","useEffect","asyncFunc","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_movieDetails","wrap","_context","prev","next","getMovieDetails","sent","t0","console","log","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Link","to","src","poster_path","concat","alt","title","width","vote_average","overview","style","display","gap","map","genre","name","Suspense","fallback","Outlet","API_KEY","fetchMovies","response","axios","get","params","api_key","abrupt","data","results","_ref2","_callee2","movieById","_context2","_x","getCast","_ref3","_callee3","movieId","cast","_context3","_x2","getReviews","_ref4","_callee4","reviews","_context4","_x3","searchMovies","_ref5","_callee5","query","search","_context5","_x4"],"sourceRoot":""}